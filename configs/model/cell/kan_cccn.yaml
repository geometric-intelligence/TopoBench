_target_: topobenchmarkx.model.TBXModel

defaults:
  - modules@kan_params: kan

model_name: kan_cccn
model_domain: cell

feature_encoder:
  _target_: topobenchmarkx.nn.encoders.${model.feature_encoder.encoder_name}
  encoder_name: KANAllCellFeatureEncoder
  in_channels: ${infer_in_channels:${dataset},${oc.select:transforms,null}} 
  out_channels: 8
  proj_dropout: 0.25
  selected_dimensions:
    - 0
    - 1
  kan_params: ${model.kan_params}

#   _target_: topobenchmarkx.nn.encoders.${model.feature_encoder.encoder_name}
#   encoder_name: AllCellFeatureEncoder
#   in_channels: ${infer_in_channels:${dataset},${oc.select:transforms,null}} 
#   out_channels: 32
#   proj_dropout: 0.
#   selected_dimensions:
#     - 0
#     - 1

backbone:
  _target_: topobenchmarkx.nn.backbones.cell.KANCCCN
  in_channels: ${model.feature_encoder.out_channels}
  n_layers: 2
  dropout: 0.0
  kan_params: ${model.kan_params}

backbone_wrapper:
  _target_: topobenchmarkx.nn.wrappers.CCCNWrapper
  _partial_: true
  wrapper_name: CCCNWrapper
  out_channels: ${model.feature_encoder.out_channels}
  num_cell_dimensions: ${infere_num_cell_dimensions:${oc.select:model.feature_encoder.selected_dimensions,null},${model.feature_encoder.in_channels}}

readout:
  _target_: topobenchmarkx.nn.readouts.${model.readout.readout_name}
  readout_name: PropagateSignalDown #  Use <NoReadOut> in case readout is not needed Options: PropagateSignalDown
  num_cell_dimensions: ${infere_num_cell_dimensions:${oc.select:model.feature_encoder.selected_dimensions,null},${model.feature_encoder.in_channels}} # The highest order of cell dimensions to consider
  hidden_dim: ${model.feature_encoder.out_channels}
  out_channels: ${dataset.parameters.num_classes}
  task_level: ${dataset.parameters.task_level}
  pooling_type: sum

# compile model for faster training with pytorch 2.0
compile: false
