# All PSEs
# GIN cell
python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_cell dataset=graph/NCI1 transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","cell","all"] --multirun
python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_cell dataset=graph/NCI109 transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","cell","all"] --multirun
python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_cell dataset=graph/PROTEINS transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.01 model.feature_encoder.out_channels=64 model.backbone.num_layers=1 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","cell","all"] --multirun 
python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_cell dataset=graph/MUTAG transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=64 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=64 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","cell","all"] --multirun
python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_cell_zinc dataset=graph/ZINC transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=32 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 callbacks.early_stopping.min_delta=0.005 transforms.one_hot_node_degree_features.degrees_field=x seed=42,3,5,23,150 trainer.max_epochs=1000 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","cell","all"] --multirun
# GIN simplicial
python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_simplicial dataset=graph/NCI1 transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","simplicial","all"] --multirun
python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_simplicial dataset=graph/NCI109 transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","simplicial","all"] --multirun
python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_simplicial dataset=graph/PROTEINS transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.01 model.feature_encoder.out_channels=64 model.backbone.num_layers=1 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","simplicial","all"] --multirun 
python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_simplicial dataset=graph/MUTAG transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=64 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=64 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","simplicial","all"] --multirun
python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_cell_simplicial dataset=graph/ZINC transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=32 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 callbacks.early_stopping.min_delta=0.005 transforms.one_hot_node_degree_features.degrees_field=x seed=42,3,5,23,150 trainer.max_epochs=1000 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","simplicial","all"] --multirun

# By one
PE_TYPES=('RWSE' 'ElstaticPE' 'HKdiagSE' 'LapPE')
for pe_type in ${PE_TYPES[*]}
    do
        # GIN cell
        python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_cell dataset=graph/NCI1 transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","cell",$pe_type] --multirun
        python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_cell dataset=graph/NCI109 transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","cell",$pe_type] --multirun
        python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_cell dataset=graph/PROTEINS transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.01 model.feature_encoder.out_channels=64 model.backbone.num_layers=1 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","cell",$pe_type] --multirun 
        python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_cell dataset=graph/MUTAG transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=64 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=64 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","cell",$pe_type] --multirun
        python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_cell_zinc dataset=graph/ZINC transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=32 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 callbacks.early_stopping.min_delta=0.005 transforms.one_hot_node_degree_features.degrees_field=x seed=42,3,5,23,150 trainer.max_epochs=1000 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","cell",$pe_type] --multirun
        # GIN simplicial
        python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_simplicial dataset=graph/NCI1 transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","simplicial",$pe_type] --multirun
        python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_simplicial dataset=graph/NCI109 transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","simplicial",$pe_type] --multirun
        python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_simplicial dataset=graph/PROTEINS transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.01 model.feature_encoder.out_channels=64 model.backbone.num_layers=1 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","simplicial",$pe_type] --multirun 
        python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_simplicial dataset=graph/MUTAG transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=64 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=64 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","simplicial",$pe_type] --multirun
        python -m topobench model=graph/hopse_gin experiment=hopse_m_gnn_cell_simplicial dataset=graph/ZINC transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=32 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 callbacks.early_stopping.min_delta=0.005 transforms.one_hot_node_degree_features.degrees_field=x seed=42,3,5,23,150 trainer.max_epochs=1000 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gin","graph","simplicial",$pe_type] --multirun

    done





# All PSEs
# GCN cell
python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_cell dataset=graph/NCI1 transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","cell","all"] --multirun
python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_cell dataset=graph/NCI109 transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","cell","all"] --multirun
python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_cell dataset=graph/PROTEINS transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.01 model.feature_encoder.out_channels=64 model.backbone.num_layers=1 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","cell","all"] --multirun 
python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_cell dataset=graph/MUTAG transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=64 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=64 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","cell","all"] --multirun
python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_cell_zinc dataset=graph/ZINC transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=32 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 callbacks.early_stopping.min_delta=0.005 transforms.one_hot_node_degree_features.degrees_field=x seed=42,3,5,23,150 trainer.max_epochs=1000 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","cell","all"] --multirun
# GCN simplicial
python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_simplicial dataset=graph/NCI1 transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","simplicial","all"] --multirun
python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_simplicial dataset=graph/NCI109 transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","simplicial","all"] --multirun
python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_simplicial dataset=graph/PROTEINS transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.01 model.feature_encoder.out_channels=64 model.backbone.num_layers=1 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","simplicial","all"] --multirun 
python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_simplicial dataset=graph/MUTAG transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=64 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=64 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","simplicial","all"] --multirun
python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_cell_simplicial dataset=graph/ZINC transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=32 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 callbacks.early_stopping.min_delta=0.005 transforms.one_hot_node_degree_features.degrees_field=x seed=42,3,5,23,150 trainer.max_epochs=1000 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","simplicial","all"] --multirun

# By one
PE_TYPES=('RWSE' 'ElstaticPE' 'HKdiagSE' 'LapPE')
for pe_type in ${PE_TYPES[*]}
    do
        # gcn cell
        python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_cell dataset=graph/NCI1 transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","cell",$pe_type] --multirun
        python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_cell dataset=graph/NCI109 transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","cell",$pe_type] --multirun
        python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_cell dataset=graph/PROTEINS transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.01 model.feature_encoder.out_channels=64 model.backbone.num_layers=1 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","cell",$pe_type] --multirun 
        python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_cell dataset=graph/MUTAG transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=64 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=64 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","cell",$pe_type] --multirun
        python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_cell_zinc dataset=graph/ZINC transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=32 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 callbacks.early_stopping.min_delta=0.005 transforms.one_hot_node_degree_features.degrees_field=x seed=42,3,5,23,150 trainer.max_epochs=1000 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","cell",$pe_type] --multirun
        # gcn simplicial
        python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_simplicial dataset=graph/NCI1 transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","simplicial",$pe_type] --multirun
        python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_simplicial dataset=graph/NCI109 transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","simplicial",$pe_type] --multirun
        python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_simplicial dataset=graph/PROTEINS transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.01 model.feature_encoder.out_channels=64 model.backbone.num_layers=1 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","simplicial",$pe_type] --multirun 
        python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_simplicial dataset=graph/MUTAG transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=64 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=64 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","simplicial",$pe_type] --multirun
        python -m topobench model=graph/hopse_gcn experiment=hopse_m_gnn_cell_simplicial dataset=graph/ZINC transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=32 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 callbacks.early_stopping.min_delta=0.005 transforms.one_hot_node_degree_features.degrees_field=x seed=42,3,5,23,150 trainer.max_epochs=1000 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gcn","graph","simplicial",$pe_type] --multirun

    done

# All PSEs
# GAT cell
python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_cell dataset=graph/NCI1 transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","cell","all"] --multirun
python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_cell dataset=graph/NCI109 transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","cell","all"] --multirun
python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_cell dataset=graph/PROTEINS transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.01 model.feature_encoder.out_channels=64 model.backbone.num_layers=1 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","cell","all"] --multirun 
python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_cell dataset=graph/MUTAG transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=64 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=64 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","cell","all"] --multirun
python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_cell_zinc dataset=graph/ZINC transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=32 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 callbacks.early_stopping.min_delta=0.005 transforms.one_hot_node_degree_features.degrees_field=x seed=42,3,5,23,150 trainer.max_epochs=1000 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","cell","all"] --multirun
# gat simplicial
python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_simplicial dataset=graph/NCI1 transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","simplicial","all"] --multirun
python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_simplicial dataset=graph/NCI109 transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","simplicial","all"] --multirun
python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_simplicial dataset=graph/PROTEINS transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.01 model.feature_encoder.out_channels=64 model.backbone.num_layers=1 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","simplicial","all"] --multirun 
python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_simplicial dataset=graph/MUTAG transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=64 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=64 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","simplicial","all"] --multirun
python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_cell_simplicial dataset=graph/ZINC transforms.sann_encoding.pe_types=['RWSE','ElstaticPE','HKdiagSE','LapPE'] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=32 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 callbacks.early_stopping.min_delta=0.005 transforms.one_hot_node_degree_features.degrees_field=x seed=42,3,5,23,150 trainer.max_epochs=1000 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","simplicial","all"] --multirun

# By one
PE_TYPES=('RWSE' 'ElstaticPE' 'HKdiagSE' 'LapPE')
for pe_type in ${PE_TYPES[*]}
    do
        # gat cell
        python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_cell dataset=graph/NCI1 transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","cell",$pe_type] --multirun
        python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_cell dataset=graph/NCI109 transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","cell",$pe_type] --multirun
        python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_cell dataset=graph/PROTEINS transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.01 model.feature_encoder.out_channels=64 model.backbone.num_layers=1 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","cell",$pe_type] --multirun 
        python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_cell dataset=graph/MUTAG transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=64 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=64 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","cell",$pe_type] --multirun
        python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_cell_zinc dataset=graph/ZINC transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=32 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 callbacks.early_stopping.min_delta=0.005 transforms.one_hot_node_degree_features.degrees_field=x seed=42,3,5,23,150 trainer.max_epochs=1000 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","cell",$pe_type] --multirun
        # gat simplicial
        python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_simplicial dataset=graph/NCI1 transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","simplicial",$pe_type] --multirun
        python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_simplicial dataset=graph/NCI109 transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=128 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","simplicial",$pe_type] --multirun
        python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_simplicial dataset=graph/PROTEINS transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.01 model.feature_encoder.out_channels=64 model.backbone.num_layers=1 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=128 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","simplicial",$pe_type] --multirun 
        python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_simplicial dataset=graph/MUTAG transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=64 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.5 dataset.dataloader_params.batch_size=64 dataset.split_params.data_seed=0,3,5,7,9 trainer.max_epochs=500 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","simplicial",$pe_type] --multirun
        python -m topobench model=graph/hopse_gat experiment=hopse_m_gnn_cell_simplicial dataset=graph/ZINC transforms.sann_encoding.pe_types=[$pe_type] optimizer.parameters.lr=0.001 model.feature_encoder.out_channels=32 model.backbone.num_layers=4 model.feature_encoder.proj_dropout=0.25 dataset.dataloader_params.batch_size=128 callbacks.early_stopping.min_delta=0.005 transforms.one_hot_node_degree_features.degrees_field=x seed=42,3,5,23,150 trainer.max_epochs=1000 trainer.min_epochs=50 trainer.check_val_every_n_epoch=5 trainer.devices=\[2\] callbacks.early_stopping.patience=10 logger.wandb.project=HOPSE_rebuttal_norm logger.wandb.tags=["gat","graph","simplicial",$pe_type] --multirun

    done