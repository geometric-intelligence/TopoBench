#!/usr/bin/env bash

# python -m topobench dataset=graph/NCI109 model=cell/sann transforms.sann_encoding.max_hop=2 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','up_adjacency-1','2-up_adjacency-0','down_adjacency-1','down_adjacency-2','2-down_adjacency-2']" transforms.sann_encoding.pretrain_model="PCQM4MV2" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=1 model.backbone.hidden_channels=256 model.readout.hidden_dim=256 model.feature_encoder.out_channels=256 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0001 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.max_cell_length=18  transforms/data_manipulations@transforms.sann_encoding=add_gpse_information transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.neighborhoods="['up_adjacency-0','up_adjacency-1','2-up_adjacency-0','down_adjacency-1','down_adjacency-2','2-down_adjacency-2']" dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/NCI109 model=simplicial/sann transforms.sann_encoding.max_hop=3 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.complex_dim=3 model.feature_encoder.proj_dropout=0 model.backbone.n_layers=1 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 transforms.sann_encoding.use_initial_features=True  transforms/data_manipulations@transforms.sann_encoding=precompute_khop_features dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/NCI109 model=cell/sann transforms.sann_encoding.max_hop=4 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','up_adjacency-1']" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=1 model.backbone.hidden_channels=256 model.readout.hidden_dim=256 model.feature_encoder.out_channels=256 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.max_cell_length=10 transforms.sann_encoding.is_undirected=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.laplacian_norm_type="sym" transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm="L2" transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True  transforms/data_manipulations@transforms.sann_encoding=hopse_ps_information transforms.graph2cell_lifting.neighborhoods="['up_adjacency-0','up_adjacency-1']" transforms.sann_encoding.kernel_param_HKdiagSE=[1,22] transforms.sann_encoding.kernel_param_RWSE=[2,20] transforms.sann_encoding.laplacian_norm_type=sym transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm=L2 transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.pe_types=["RWSE","ElstaticPE","HKdiagSE","LapPE"] dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/NCI1 model=cell/sann transforms.sann_encoding.max_hop=2 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','up_adjacency-1','2-up_adjacency-0','down_adjacency-1','down_adjacency-2','2-down_adjacency-2']" transforms.sann_encoding.pretrain_model="GEOM" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=2 model.backbone.hidden_channels=256 model.readout.hidden_dim=256 model.feature_encoder.out_channels=256 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.max_cell_length=18  transforms/data_manipulations@transforms.sann_encoding=add_gpse_information transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.neighborhoods="['up_adjacency-0','up_adjacency-1','2-up_adjacency-0','down_adjacency-1','down_adjacency-2','2-down_adjacency-2']" dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/NCI1 model=simplicial/sann transforms.sann_encoding.max_hop=2 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.complex_dim=3 model.feature_encoder.proj_dropout=0 model.backbone.n_layers=4 model.backbone.hidden_channels=256 model.readout.hidden_dim=256 model.feature_encoder.out_channels=256 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 transforms.sann_encoding.use_initial_features=True  transforms/data_manipulations@transforms.sann_encoding=precompute_khop_features dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/NCI1 model=cell/sann transforms.sann_encoding.max_hop=4 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','up_adjacency-1','down_adjacency-1','down_adjacency-2','up_incidence-0','up_incidence-1','down_incidence-1','down_incidence-2']" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=2 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.max_cell_length=10 transforms.sann_encoding.is_undirected=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.laplacian_norm_type="sym" transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm="L2" transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True  transforms/data_manipulations@transforms.sann_encoding=hopse_ps_information transforms.graph2cell_lifting.neighborhoods="['up_adjacency-0','up_adjacency-1','down_adjacency-1','down_adjacency-2','up_incidence-0','up_incidence-1','down_incidence-1','down_incidence-2']" transforms.sann_encoding.kernel_param_HKdiagSE=[1,22] transforms.sann_encoding.kernel_param_RWSE=[2,20] transforms.sann_encoding.laplacian_norm_type=sym transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm=L2 transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.pe_types=["RWSE","ElstaticPE","HKdiagSE","LapPE"] dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/MUTAG model=cell/sann transforms.sann_encoding.max_hop=2 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','up_incidence-0','up_incidence-1','down_incidence-1','down_incidence-2']" transforms.sann_encoding.pretrain_model="ZINC" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=1 model.backbone.hidden_channels=256 model.readout.hidden_dim=256 model.feature_encoder.out_channels=256 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0001 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=256 transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.max_cell_length=18  transforms/data_manipulations@transforms.sann_encoding=add_gpse_information transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.neighborhoods="['up_adjacency-0','up_incidence-0','up_incidence-1','down_incidence-1','down_incidence-2']" dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/MUTAG model=simplicial/sann transforms.sann_encoding.max_hop=1 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.complex_dim=3 model.feature_encoder.proj_dropout=0 model.backbone.n_layers=2 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0001 optimizer.parameters.lr=0.01 dataset.dataloader_params.batch_size=128 transforms.sann_encoding.use_initial_features=True  transforms/data_manipulations@transforms.sann_encoding=precompute_khop_features dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/MUTAG model=cell/sann transforms.sann_encoding.max_hop=4 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','up_adjacency-1','down_adjacency-1','down_adjacency-2','up_incidence-0','up_incidence-1','down_incidence-1','down_incidence-2']" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=1 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0001 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.max_cell_length=10 transforms.sann_encoding.is_undirected=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.laplacian_norm_type="sym" transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm="L2" transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True  transforms/data_manipulations@transforms.sann_encoding=hopse_ps_information transforms.graph2cell_lifting.neighborhoods="['up_adjacency-0','up_adjacency-1','down_adjacency-1','down_adjacency-2','up_incidence-0','up_incidence-1','down_incidence-1','down_incidence-2']" transforms.sann_encoding.kernel_param_HKdiagSE=[1,22] transforms.sann_encoding.kernel_param_RWSE=[2,20] transforms.sann_encoding.laplacian_norm_type=sym transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm=L2 transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.pe_types=["RWSE","ElstaticPE","HKdiagSE","LapPE"] dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=simplicial/MANTRA_name model=simplicial/sann transforms.sann_encoding.max_hop=2 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0']" transforms.sann_encoding.pretrain_model="PCQM4MV2" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=1 model.backbone.hidden_channels=256 model.readout.hidden_dim=256 model.feature_encoder.out_channels=256 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=256 dataset.loader.parameters.manifold_dim=2 transforms.sann_encoding.copy_initial=True transforms.redefine_simplicial_neighborhoods.signed=True transforms.redefine_simplicial_neighborhoods.complex_dim=3 dataset.loader.parameters.slice=True transforms/data_manipulations@transforms.sann_encoding=add_gpse_information transforms.sann_encoding.copy_initial=True transforms/data_manipulations@transforms.redefine_simplicial_neighborhoods=redefine_simplicial_neighborhoods transforms.redefine_simplicial_neighborhoods.neighborhoods="['up_adjacency-0']" transforms.redefine_simplicial_neighborhoods.signed=True dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=simplicial/MANTRA_name model=simplicial/sccnn model.feature_encoder.proj_dropout=0 model.backbone.n_layers=4 model.readout.hidden_dim=64 model.feature_encoder.out_channels=64 model.backbone.sc_order=3 model.backbone.conv_order=1 model.readout.readout_name="PropagateSignalDown" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=256 dataset.loader.parameters.manifold_dim=2 transforms.redefine_simplicial_neighborhoods.signed=True transforms.redefine_simplicial_neighborhoods.complex_dim=3 dataset.loader.parameters.slice=True  dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=simplicial/MANTRA_name model=simplicial/sann transforms.sann_encoding.max_hop=3 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.complex_dim=3 model.feature_encoder.proj_dropout=0 model.backbone.n_layers=4 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 dataset.loader.parameters.manifold_dim=2 transforms.sann_encoding.use_initial_features=True dataset.loader.parameters.slice=True transforms/data_manipulations@transforms.sann_encoding=precompute_khop_features dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=simplicial/MANTRA_name model=simplicial/sann transforms.sann_encoding.max_hop=4 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','up_adjacency-1','2-up_adjacency-0','down_adjacency-1','down_adjacency-2','2-down_adjacency-2']" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=1 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=256 dataset.loader.parameters.manifold_dim=2 transforms.sann_encoding.copy_initial=True transforms.sann_encoding.is_undirected=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.laplacian_norm_type="sym" transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm="L2" transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True transforms.redefine_simplicial_neighborhoods.signed=True transforms.redefine_simplicial_neighborhoods.complex_dim=3 dataset.loader.parameters.slice=True transforms/data_manipulations@transforms.sann_encoding=hopse_ps_information transforms/data_manipulations@transforms.redefine_simplicial_neighborhoods=redefine_simplicial_neighborhoods transforms.redefine_simplicial_neighborhoods.neighborhoods="['up_adjacency-0','up_adjacency-1','2-up_adjacency-0','down_adjacency-1','down_adjacency-2','2-down_adjacency-2']" transforms.redefine_simplicial_neighborhoods.signed=True transforms.sann_encoding.kernel_param_HKdiagSE=[1,22] transforms.sann_encoding.kernel_param_RWSE=[2,20] transforms.sann_encoding.laplacian_norm_type=sym transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm=L2 transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.pe_types=["RWSE","ElstaticPE","HKdiagSE","LapPE"] dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=simplicial/MANTRA_name model=graph/gin model.feature_encoder.proj_dropout=0 model.backbone.hidden_channels=32 model.readout.hidden_dim=32 model.feature_encoder.out_channels=32 model.readout.readout_name="NoReadOut" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=256 dataset.loader.parameters.manifold_dim=2 dataset.loader.parameters.slice=True  dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=simplicial/MANTRA_name model=graph/gcn model.feature_encoder.proj_dropout=0 model.backbone.hidden_channels=32 model.readout.hidden_dim=32 model.feature_encoder.out_channels=32 model.readout.readout_name="NoReadOut" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 dataset.loader.parameters.manifold_dim=2 dataset.loader.parameters.slice=True  dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=simplicial/MANTRA_orientation model=simplicial/sann transforms.sann_encoding.max_hop=2 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','up_adjacency-1','down_adjacency-2']" transforms.sann_encoding.pretrain_model="PCQM4MV2" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=4 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=256 dataset.loader.parameters.manifold_dim=2 transforms.sann_encoding.copy_initial=True transforms.redefine_simplicial_neighborhoods.signed=True transforms.redefine_simplicial_neighborhoods.complex_dim=3 dataset.loader.parameters.slice=True transforms/data_manipulations@transforms.sann_encoding=add_gpse_information transforms.sann_encoding.copy_initial=True transforms/data_manipulations@transforms.redefine_simplicial_neighborhoods=redefine_simplicial_neighborhoods transforms.redefine_simplicial_neighborhoods.neighborhoods="['up_adjacency-0','up_adjacency-1','down_adjacency-2']" transforms.redefine_simplicial_neighborhoods.signed=True dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
python -m topobench dataset=simplicial/MANTRA_orientation model=simplicial/sccnn model.feature_encoder.proj_dropout=0 model.backbone.n_layers=2 model.readout.hidden_dim=64 model.feature_encoder.out_channels=64 model.backbone.sc_order=3 model.backbone.conv_order=1 model.readout.readout_name="PropagateSignalDown" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 dataset.loader.parameters.manifold_dim=2 transforms.redefine_simplicial_neighborhoods.signed=True transforms.redefine_simplicial_neighborhoods.complex_dim=3 dataset.loader.parameters.slice=True  dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=simplicial/MANTRA_orientation model=simplicial/sann transforms.sann_encoding.max_hop=2 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.complex_dim=3 model.feature_encoder.proj_dropout=0 model.backbone.n_layers=2 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 dataset.loader.parameters.manifold_dim=2 transforms.sann_encoding.use_initial_features=True dataset.loader.parameters.slice=True transforms/data_manipulations@transforms.sann_encoding=precompute_khop_features dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=simplicial/MANTRA_orientation model=simplicial/sann transforms.sann_encoding.max_hop=4 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','up_adjacency-1','down_adjacency-1','down_adjacency-2','up_incidence-0','up_incidence-1','down_incidence-1','down_incidence-2']" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=4 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=256 dataset.loader.parameters.manifold_dim=2 transforms.sann_encoding.copy_initial=True transforms.sann_encoding.is_undirected=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.laplacian_norm_type="sym" transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm="L2" transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True transforms.redefine_simplicial_neighborhoods.signed=True transforms.redefine_simplicial_neighborhoods.complex_dim=3 dataset.loader.parameters.slice=True transforms/data_manipulations@transforms.sann_encoding=hopse_ps_information transforms/data_manipulations@transforms.redefine_simplicial_neighborhoods=redefine_simplicial_neighborhoods transforms.redefine_simplicial_neighborhoods.neighborhoods="['up_adjacency-0','up_adjacency-1','down_adjacency-1','down_adjacency-2','up_incidence-0','up_incidence-1','down_incidence-1','down_incidence-2']" transforms.redefine_simplicial_neighborhoods.signed=True transforms.sann_encoding.kernel_param_HKdiagSE=[1,22] transforms.sann_encoding.kernel_param_RWSE=[2,20] transforms.sann_encoding.laplacian_norm_type=sym transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm=L2 transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.pe_types=["RWSE","ElstaticPE","HKdiagSE","LapPE"] dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=simplicial/MANTRA_orientation model=graph/gin model.feature_encoder.proj_dropout=0 model.backbone.hidden_channels=64 model.readout.hidden_dim=64 model.feature_encoder.out_channels=64 model.readout.readout_name="NoReadOut" optimizer.parameters.weight_decay=0.0001 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 dataset.loader.parameters.manifold_dim=2 dataset.loader.parameters.slice=True  dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=simplicial/MANTRA_orientation model=graph/gcn model.feature_encoder.proj_dropout=0 model.backbone.hidden_channels=32 model.readout.hidden_dim=32 model.feature_encoder.out_channels=32 model.readout.readout_name="NoReadOut" optimizer.parameters.weight_decay=0.0001 optimizer.parameters.lr=0.01 dataset.dataloader_params.batch_size=128 dataset.loader.parameters.manifold_dim=2 dataset.loader.parameters.slice=True  dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/PROTEINS model=simplicial/sann transforms.sann_encoding.max_hop=2 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','down_incidence-1','down_incidence-2']" transforms.sann_encoding.pretrain_model="PCQM4MV2" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=1 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0001 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=256 transforms.sann_encoding.copy_initial=True  transforms/data_manipulations@transforms.sann_encoding=add_gpse_information transforms.sann_encoding.copy_initial=True transforms.graph2simplicial_lifting.neighborhoods="['up_adjacency-0','down_incidence-1','down_incidence-2']" dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/PROTEINS model=simplicial/sann transforms.sann_encoding.max_hop=1 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.complex_dim=3 model.feature_encoder.proj_dropout=0 model.backbone.n_layers=4 model.backbone.hidden_channels=256 model.readout.hidden_dim=256 model.feature_encoder.out_channels=256 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0001 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 transforms.sann_encoding.use_initial_features=True  transforms/data_manipulations@transforms.sann_encoding=precompute_khop_features dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/PROTEINS model=cell/sann transforms.sann_encoding.max_hop=4 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0']" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=2 model.backbone.hidden_channels=256 model.readout.hidden_dim=256 model.feature_encoder.out_channels=256 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=256 transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.max_cell_length=10 transforms.sann_encoding.is_undirected=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.laplacian_norm_type="sym" transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm="L2" transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True  transforms/data_manipulations@transforms.sann_encoding=hopse_ps_information transforms.graph2cell_lifting.neighborhoods="['up_adjacency-0']" transforms.sann_encoding.kernel_param_HKdiagSE=[1,22] transforms.sann_encoding.kernel_param_RWSE=[2,20] transforms.sann_encoding.laplacian_norm_type=sym transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm=L2 transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.pe_types=["RWSE","ElstaticPE","HKdiagSE","LapPE"] dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/IMDB-BINARY model=cell/sann transforms.sann_encoding.max_hop=2 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','up_adjacency-1','down_adjacency-1','down_adjacency-2','up_incidence-0','up_incidence-1','down_incidence-1','down_incidence-2']" transforms.sann_encoding.pretrain_model="GEOM" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=2 model.backbone.hidden_channels=256 model.readout.hidden_dim=256 model.feature_encoder.out_channels=256 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0001 optimizer.parameters.lr=0.01 dataset.dataloader_params.batch_size=256 transforms.sann_encoding.copy_initial="True" transforms.graph2cell_lifting.max_cell_length=18  transforms/data_manipulations@transforms.sann_encoding=add_gpse_information transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.neighborhoods="['up_adjacency-0','up_adjacency-1','down_adjacency-1','down_adjacency-2','up_incidence-0','up_incidence-1','down_incidence-1','down_incidence-2']" dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/ZINC model=cell/sann transforms.sann_encoding.max_hop=2 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','up_adjacency-1','2-up_adjacency-0','down_adjacency-1','down_adjacency-2','2-down_adjacency-2']" transforms.sann_encoding.pretrain_model="PCQM4MV2" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=4 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0001 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=256 transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.max_cell_length=10 transforms.one_hot_node_degree_features.degrees_field=x transforms.one_hot_node_degree_features.features_field=x transforms/data_manipulations@transforms.sann_encoding=add_gpse_information transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.neighborhoods="['up_adjacency-0','up_adjacency-1','2-up_adjacency-0','down_adjacency-1','down_adjacency-2','2-down_adjacency-2']" dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/ZINC model=simplicial/sann transforms.sann_encoding.max_hop=3 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.complex_dim=3 model.feature_encoder.proj_dropout=0 model.backbone.n_layers=4 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0001 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 transforms.sann_encoding.use_initial_features=True transforms.one_hot_node_degree_features.degrees_field=x transforms.one_hot_node_degree_features.features_field=x transforms/data_manipulations@transforms.sann_encoding=precompute_khop_features dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/ZINC model=cell/sann transforms.sann_encoding.max_hop=4 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','up_incidence-0','up_incidence-1','down_incidence-1','down_incidence-2']" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=2 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0 optimizer.parameters.lr=0.001 dataset.dataloader_params.batch_size=128 transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.max_cell_length=10 transforms.sann_encoding.is_undirected=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.laplacian_norm_type="sym" transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm="L2" transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True transforms.one_hot_node_degree_features.degrees_field=x transforms.one_hot_node_degree_features.features_field=x transforms/data_manipulations@transforms.sann_encoding=hopse_ps_information transforms.graph2cell_lifting.neighborhoods="['up_adjacency-0','up_incidence-0','up_incidence-1','down_incidence-1','down_incidence-2']" transforms.sann_encoding.kernel_param_HKdiagSE=[1,22] transforms.sann_encoding.kernel_param_RWSE=[2,20] transforms.sann_encoding.laplacian_norm_type=sym transforms.sann_encoding.posenc_LapPE_eigen_max_freqs=18 transforms.sann_encoding.posenc_LapPE_eigen_eigvec_norm=L2 transforms.sann_encoding.posenc_LapPE_eigen_skip_zero_freq=True transforms.sann_encoding.posenc_LapPE_eigen_eigvec_abs=True transforms.sann_encoding.target_pe_dim=20 transforms.sann_encoding.pe_types=["RWSE","ElstaticPE","HKdiagSE","LapPE"] dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
# python -m topobench dataset=graph/IMDB-MULTI model=cell/sann transforms.sann_encoding.max_hop=2 transforms.sann_encoding.max_rank=2 transforms.sann_encoding.neighborhoods="['up_adjacency-0','down_incidence-1','down_incidence-2']" transforms.sann_encoding.pretrain_model="PCQM4MV2" model.feature_encoder.proj_dropout=0 model.backbone.n_layers=4 model.backbone.hidden_channels=128 model.readout.hidden_dim=128 model.feature_encoder.out_channels=128 model.readout.readout_name="SANNReadout" optimizer.parameters.weight_decay=0.0001 optimizer.parameters.lr=0.01 dataset.dataloader_params.batch_size=128 transforms.sann_encoding.copy_initial="True" transforms.graph2cell_lifting.max_cell_length=18  transforms/data_manipulations@transforms.sann_encoding=add_gpse_information transforms.sann_encoding.copy_initial=True transforms.graph2cell_lifting.neighborhoods="['up_adjacency-0','down_incidence-1','down_incidence-2']" dataset.split_params.data_seed=0,3,5,7,9 trainer.accelerator=cpu trainer.devices=1 trainer.max_epochs=500 trainer.min_epochs=50 callbacks.early_stopping.patience=10 --multirun
