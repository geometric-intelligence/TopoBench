# python topobench/run.py dataset=simplicial/mantra_name model=simplicial/sccnn_custom model.backbone.n_layers=1 model.feature_encoder.out_channels=128 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[0] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=no_transform
# wait

# python topobench/run.py dataset=simplicial/mantra_name model=simplicial/sccnn_custom model.backbone.n_layers=4 model.feature_encoder.out_channels=128 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[0] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=no_transform &

# python topobench/run.py dataset=simplicial/mantra_name model=simplicial/sccnn_custom model.backbone.n_layers=1 model.feature_encoder.out_channels=128 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[1] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=MANTRA_name_dataset_default transforms.redefine_simplicial_neighbourhoods.signed=True &

# python topobench/run.py dataset=simplicial/mantra_name model=graph/gcn model.backbone.num_layers=1 model.feature_encoder.out_channels=128 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[4] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=no_transform &

# python topobench/run.py dataset=simplicial/mantra_name model=graph/gcn model.backbone.num_layers=4 model.feature_encoder.out_channels=128 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[5] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=no_transform &
# wait

# python topobench/run.py dataset=simplicial/mantra_name model=simplicial/scn model.backbone.n_layers=1 model.feature_encoder.out_channels=128 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[2] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=MANTRA_name_dataset_default transforms.redefine_simplicial_neighbourhoods.signed=True &

# python topobench/run.py dataset=simplicial/mantra_name modelq=simplicial/scn model.backbone.n_layers=4 model.feature_encoder.out_channels=128 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[2] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=MANTRA_name_dataset_default transforms.redefine_simplicial_neighbourhoods.signed=True &

# python topobench/run.py dataset=simplicial/mantra_name model=simplicial/sccnn_custom model.backbone.n_layers=1 model.feature_encoder.out_channels=128 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[3] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=MANTRA_name_dataset_default transforms.redefine_simplicial_neighbourhoods.signed=False &

python topobench/run.py dataset=simplicial/mantra_name model=simplicial/sccnn_custom model.backbone.n_layers=1 model.feature_encoder.out_channels=64 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[0] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks2 optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=MANTRA_name_dataset_default transforms.redefine_simplicial_neighbourhoods.signed=True &
sleep 5
python topobench/run.py dataset=simplicial/mantra_name model=simplicial/sccnn_custom model.backbone.n_layers=4 model.feature_encoder.out_channels=64 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[1] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks2 optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=MANTRA_name_dataset_default transforms.redefine_simplicial_neighbourhoods.signed=True &
sleep 5
python topobench/run.py dataset=simplicial/mantra_name model=simplicial/sccnn_custom model.backbone.n_layers=1 model.feature_encoder.out_channels=64 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[2] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks2 optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=MANTRA_name_dataset_default transforms.redefine_simplicial_neighbourhoods.signed=False &
sleep 5
python topobench/run.py dataset=simplicial/mantra_name model=simplicial/sccnn_custom model.backbone.n_layers=4 model.feature_encoder.out_channels=64 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[3] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks2 optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=MANTRA_name_dataset_default transforms.redefine_simplicial_neighbourhoods.signed=False &
sleep 5
python topobench/run.py dataset=simplicial/mantra_name model=simplicial/sccnn_custom model.backbone.n_layers=1 model.feature_encoder.out_channels=64 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[4] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks2 optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=no_transform &
sleep 5
python topobench/run.py dataset=simplicial/mantra_name model=simplicial/sccnn_custom model.backbone.n_layers=4 model.feature_encoder.out_channels=64 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[5] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks2 optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=no_transform &
sleep 5
python topobench/run.py dataset=simplicial/mantra_name model=simplicial/scn model.backbone.n_layers=1 model.feature_encoder.out_channels=64 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[0] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks2 optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=MANTRA_name_dataset_default transforms.redefine_simplicial_neighbourhoods.signed=True &
sleep 5
python topobench/run.py dataset=simplicial/mantra_name model=simplicial/scn model.backbone.n_layers=4 model.feature_encoder.out_channels=64 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[1] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks2 optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=MANTRA_name_dataset_default transforms.redefine_simplicial_neighbourhoods.signed=True &
sleep 5
python topobench/run.py dataset=simplicial/mantra_name model=simplicial/scn model.backbone.n_layers=1 model.feature_encoder.out_channels=64 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[2] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks2 optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=MANTRA_name_dataset_default transforms.redefine_simplicial_neighbourhoods.signed=False &
sleep 5
python topobench/run.py dataset=simplicial/mantra_name model=simplicial/scn model.backbone.n_layers=4 model.feature_encoder.out_channels=64 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[3] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks2 optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=MANTRA_name_dataset_default transforms.redefine_simplicial_neighbourhoods.signed=False &
sleep 5
python topobench/run.py dataset=simplicial/mantra_name model=simplicial/scn model.backbone.n_layers=1 model.feature_encoder.out_channels=64 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[4] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks2 optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=no_transform &

python topobench/run.py dataset=simplicial/mantra_name model=simplicial/scn model.backbone.n_layers=4 model.feature_encoder.out_channels=64 model.feature_encoder.proj_dropout=0.25 dataset.split_params.data_seed=0 dataset.dataloader_params.batch_size=256 trainer.max_epochs=500 trainer.min_epochs=1 trainer.devices=[5] trainer.check_val_every_n_epoch=5 logger.wandb.project=mantra_checks2 optimizer.parameters.lr=0.001 callbacks.early_stopping.patience=10 transforms=no_transform &